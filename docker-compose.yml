version: '3.9'
 
volumes:
  customer-service-db-volume:
    name: customer-service-db-volume
  orders-service-db-volume:
    name: orders-service-db-volume

services:
  orders-service-1:
    build:
      context: ./Ozon.Route256.Practice.OrdersService
      dockerfile: Dockerfile
    container_name: orders-service-1
    depends_on: 
      - orders-service-db
      - service-discovery
      - broker-1
      - broker-2
      - broker-3
    environment:
      "ROUTE256_SD_ADDRESS": "http://service-discovery:80"
      "LOGISTICS_SIMULATOR_ADDRESS": "http://logistic-simulator:80"
      "CUSTOMER_SERVICE_ADDRESS": "http://customer-service:5005"
      "ROUTE256_GRPC_PORT": "5010"

  orders-service-2:
    build:
      context: ./Ozon.Route256.Practice.OrdersService
      dockerfile: Dockerfile
    container_name: orders-service-2
    ports:
      - 5010:5010 
    depends_on: 
      - orders-service-db
      - service-discovery 
      - broker-1
      - broker-2
      - broker-3
    environment:
      "ROUTE256_SD_ADDRESS": "http://service-discovery:80"
      "LOGISTICS_SIMULATOR_ADDRESS": "http://logistic-simulator:80"
      "CUSTOMER_SERVICE_ADDRESS": "http://customer-service:5005"
      "ROUTE256_GRPC_PORT": "5010"

  gateway-service:
    build:
      context: ./Ozon.Route256.Practice.GatewayService
      dockerfile: Dockerfile
    container_name: gateway-service
    ports:
      - '5084:80'
    environment:
      "ROUTE256_ORDERS_SERVICE_GRPC" : "static:///orders-service"
      "ROUTE256_CUSTOMER_SERVICE_GRPC" : "http://customer-service:5005"
      "ORDERS_SERVICE_1" : "orders-service-1:5010"
      "ORDERS_SERVICE_2" : "orders-service-2:5010"
  
  customer-service:
    image: >-
      gitlab-registry.ozon.dev/cs/classroom-10/students/practice/customer-service:latest
    container_name: customer-service
    environment:
      "ROUTE256_SD_ADDRESS": "http://service-discovery:80"
      "ROUTE256_GRPC_PORT": "5005"
      "ROUTE256_HTTP_PORT": "5004"
    depends_on: 
      - customer-service-db

  logistic-simulator:
    image: >-
      gitlab-registry.ozon.dev/cs/classroom-10/students/practice/logistics-simulator:latest

    container_name: logistic-simulator
    depends_on:
      - broker-1
      - broker-2
      - broker-3

  orders-generator-web:
    image: >-
      gitlab-registry.ozon.dev/cs/classroom-10/students/practice/orders-generator:latest
    container_name: orders-generator-web
    environment:
      - ROUTE256_ORDER_SOURCE=WebSite
      - ROUTE256_ORDER_REQUEST_TOPIC=pre_orders
      - 'ROUTE256_KAFKA_BROKERS=broker-1:9091'

  orders-generator-mobile:
    image: >-
      gitlab-registry.ozon.dev/cs/classroom-10/students/practice/orders-generator:latest
    container_name: orders-generator-mobile
    environment:
      - ROUTE256_ORDER_SOURCE=Mobile
      - ROUTE256_ORDER_REQUEST_TOPIC=pre_orders
      - 'ROUTE256_KAFKA_BROKERS=broker-1:9091'

  orders-generator-api:
    image: >-
      gitlab-registry.ozon.dev/cs/classroom-10/students/practice/orders-generator:latest
    container_name: orders-generator-api
    environment:
      - ROUTE256_ORDER_SOURCE=Api
      - ROUTE256_ORDER_REQUEST_TOPIC=pre_orders
      - 'ROUTE256_KAFKA_BROKERS=broker-1:9091'
  service-discovery:
    image: >-
      gitlab-registry.ozon.dev/cs/classroom-10/students/practice/service-discovery:latest
    container_name: service-discovery
    ports:
      - "6081:80"
    environment:
      - >-
        ROUTE256_DB_STATE=cluster:0-9:db1:1543;cluster:10-19:db2:1543;cluster1:0:db3:1543
      - ROUTE256_UPDATE_TIMEOUT=10

  customer-service-db:
    image: 'postgres:latest'
    container_name: customer-service-db
    environment:
      - POSTGRES_DB=customer-service
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - '5400:5432'
    volumes:
      - 'customer-service-db-volume:/var/lib/postgresql/data'

  orders-service-db:
    image: 'postgres:latest'
    container_name: orders-service-db
    environment:
      - POSTGRES_DB=orders-service
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - '5401:5432'
    volumes:
      - 'orders-service-db-volume:/var/lib/postgresql/data'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: '1'
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_SERVERS: 'zookeeper:2888:3888'
      ZOOKEEPER_PEER_PORT: '2888'
      ZOOKEEPER_LEADER_PORT: '3888'
      ZOOKEEPER_INIT_LIMIT: '10'
      ZOOKEEPER_SYNC_LIMIT: '5'
      ZOOKEEPER_MAX_CLIENT_CONNS: '5'

  broker-1:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker-1
    depends_on:
      - zookeeper
    ports:
      - "29091:29091"
    environment:
      KAFKA_BROKER_ID: '1'
      KAFKA_BROKER_RACK: '1'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'LISTENER_INTERNAL://:9091,LISTENER_LOCAL://:29091'
      KAFKA_ADVERTISED_LISTENERS: 'LISTENER_INTERNAL://broker-1:9091,LISTENER_LOCAL://localhost:29091'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'LISTENER_INTERNAL'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'LISTENER_INTERNAL:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT'
      KAFKA_DEFAULT_REPLICATION_FACTOR: '2'

  broker-2:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker-2
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: '2'
      KAFKA_BROKER_RACK: '2'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'LISTENER_INTERNAL://:9091,LISTENER_LOCAL://:29092'
      KAFKA_ADVERTISED_LISTENERS: 'LISTENER_INTERNAL://broker-2:9091,LISTENER_LOCAL://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'LISTENER_INTERNAL'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'LISTENER_INTERNAL:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT'
      KAFKA_DEFAULT_REPLICATION_FACTOR: '2'
      
  broker-3:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker-3
    depends_on:
      - zookeeper
    ports:
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: '3'
      KAFKA_BROKER_RACK: '3'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'LISTENER_INTERNAL://:9091,LISTENER_LOCAL://:29093'
      KAFKA_ADVERTISED_LISTENERS: 'LISTENER_INTERNAL://broker-3:9091,LISTENER_LOCAL://localhost:29093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'LISTENER_INTERNAL'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'LISTENER_INTERNAL:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT'
      KAFKA_DEFAULT_REPLICATION_FACTOR: '2'
  
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"